{"version":3,"sources":["serviceWorker.js","services/auth.js","services/api.js","pages/Login/styles.js","pages/Login/index.js","pages/Nup/styles.js","components/Tabela.js","services/config.js","pages/Nup/index.js","pages/Data/styles.js","pages/Data/index.js","pages/Termo/styles.js","pages/Termo/index.js","pages/Config/styles.js","pages/Config/index.js","pages/Layout/styles.js","pages/Layout/listItems.js","pages/Layout/index.js","routes.js","App.js","index.js","reducers.js"],"names":["Boolean","window","location","hostname","match","TOKEN_KEY","login","token","sessionStorage","setItem","logout","removeItem","api","axios","create","baseURL","interceptors","request","use","a","config","getItem","headers","Authorization","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","props","classes","useStyles","useState","username","setUsername","password","setPassword","erro","setErro","handleLogin","e","preventDefault","post","response","data","history","push","Container","component","maxWidth","CssBaseline","className","src","alt","style","marginBottom","Avatar","Typography","variant","onSubmit","noValidate","TextField","required","fullWidth","autoFocus","id","label","name","autoComplete","onChange","target","value","type","Button","color","cxPesquisa","padding","input","marginLeft","flex","iconButton","overflowX","table","minWidth","fontWeight","Tabela","rows","dispatch","useDispatch","page","setPage","rowsPerPage","setRowsPerPage","openDialog","setOpenDialog","objetoRecorte","setObjetoRecorte","handleCloseDialog","consultarDetalhes","get","msg","message","mensagem","Paper","Table","TableHead","TableRow","TableCell","TableBody","slice","map","row","key","scope","numeracao_unica","Link","textAlign","underline","onClick","recorte","split","join","length","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","event","labelRowsPerPage","labelDisplayedRows","from","to","Dialog","open","onClose","scroll","aria-labelledby","DialogTitle","DialogContent","dividers","DialogContentText","Grid","container","item","md","data_criacao_formatada","data_modificacao_formatada","data_publicacao_formatada","codigo_diario","caderno","novo_recorte","DialogActions","getNumeroRegistros","setNumeroRegistros","nregistros","Nup","styles","size","termo","setTermo","setRows","React","loading","setLoading","exibirMensagem","pesquisar","params","nup","recortes","r","gutterBottom","InputBase","placeholder","Fade","unmountOnExit","in","transitionDelay","CircularProgress","IconButton","aria-label","Data","Date","t","format","utils","DateFnsUtils","date","KeyboardButtonProps","Termo","q","textField","marginRight","Config","setSize","parseInt","root","logo","position","left","top","toolbar","paddingRight","toolbarIcon","justifyContent","borderBottomColor","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menu","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","speedDial","right","mainListItems","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","actions","icon","Layout","isMobile","innerWidth","setOpen","dialOpen","setDialOpen","snackOpen","useSelector","state","exibicao","handleSnackClose","handleLogout","reload","AppBar","clsx","Toolbar","edge","noWrap","exampleWrapper","SpeedDial","ariaLabel","hidden","onOpen","direction","action","SpeedDialAction","tooltipTitle","Drawer","List","path","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","close","PrivateRoute","Component","rest","render","pathname","Routes","exact","App","recorteStore","createStore","combineReducers","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27d49c2d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","\nexport const TOKEN_KEY = \"@recursos-token\";\n\nexport const isAuthenticated = () => sessionStorage.getItem(TOKEN_KEY) !== null;\n\nexport const getToken = () => sessionStorage.getItem(TOKEN_KEY);\n\nexport const login = token => {\n\n    sessionStorage.setItem(TOKEN_KEY, token);\n};\n\nexport const logout = () => {\n\n    sessionStorage.removeItem(TOKEN_KEY);\n};\n","\nimport axios from \"axios\";\nimport { getToken } from \"./auth\";\n\n\nconst hostname = window.location.hostname;\nconst api = axios.create({\n\n    baseURL: `http://${hostname}:8001`\n});\n\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if (token) {\n        config.headers.Authorization = `Token ${token}`;\n    }\n    return config;\n});\n\nexport default api;\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n","\nimport React, { useState } from \"react\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { CssBaseline, Avatar, Button, TextField, Typography, Container } from '@material-ui/core';\n\nimport api from \"../../services/api\";\nimport useStyles from './styles';\nimport { login } from \"../../services/auth\";\n\n\nexport default function Login(props) {\n\n    // Contantes auxiliares.\n    const classes = useStyles();\n\n    // Estados locais.\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [erro, setErro] = useState('');\n\n    const handleLogin = async e => {\n        e.preventDefault();\n\n        if (!username || !password) {\n            setErro('Preencha e-mail e senha para continuar.')\n        }\n        else {\n            try {\n                const response = await api.post(\"/api-token-auth/\", { username, password });\n                login(response.data.token);\n                props.history.push(\"/nup\");\n            } catch (err) {\n                setErro('Não foi possível efetuar o login. Verifique suas credenciais.');\n            }\n        }\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n\n                <img src={process.env.PUBLIC_URL + '/tikal.png'} alt=\"Tikal Tech\" style={{ width: '120px', marginBottom: '2em' }} />\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Login\n                </Typography>\n                {erro && <p>{erro}</p>}\n                <form className={classes.form} onSubmit={handleLogin} noValidate>\n                    <TextField required fullWidth autoFocus variant=\"outlined\" margin=\"normal\" id=\"username\"\n                        label=\"Login\" name=\"username\" autoComplete=\"username\"\n                        onChange={e => setUsername(e.target.value)} />\n\n                    <TextField required fullWidth variant=\"outlined\" margin=\"normal\" name=\"password\" label=\"Senha\"\n                        type=\"password\" id=\"password\" autoComplete=\"current-password\"\n                        onChange={e => setPassword(e.target.value)} />\n\n                    <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        Efetuar login\n                </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n    // Estilos da caixa de pesquisa.\n    cxPesquisa: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '50%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    }\n}));\n","\nimport 'typeface-roboto';\nimport React, { useState } from 'react';\nimport { Paper, Button, Link, Grid } from '@material-ui/core';\nimport { DialogActions, Dialog, DialogTitle, DialogContent, DialogContentText } from '@material-ui/core';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TablePagination } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\n\nimport api from '../services/api';\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        width: '100%',\n        overflowX: 'auto',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    },\n    label: {\n        fontWeight: 'bold'\n    }\n}));\n\n\nexport default function Tabela({ rows }) {\n\n    // Contantes auxiliares.\n    const dispatch = useDispatch()\n    const classes = useStyles();\n\n    // Estados locais.\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [objetoRecorte, setObjetoRecorte] = useState(null);\n\n    const handleCloseDialog = e => {\n        setOpenDialog(false);\n    };\n\n    const handleChangePage = (e, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    // Método útil para exibir a mensagem no snack.\n    const exibirMensagem = msg => {\n        dispatch({ type: 'ALTERAR_MENSAGEM', mensagem: msg });\n        dispatch({ type: 'EXIBIR_MENSAGEM' });\n    }\n\n    const consultarDetalhes = async e => {\n        e.preventDefault();\n\n        try {\n            const response = await api.get(`/api/recortes/${e.target.value}`);\n            setObjetoRecorte(response.data);\n            setOpenDialog(true);\n        }\n        catch (err) {\n            exibirMensagem(err.message);\n        }\n    };\n\n    return (\n        <Paper className={classes.paper}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Número</TableCell>\n                        <TableCell>Recorte</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map(row => (\n                            <TableRow key={row.id}>\n                                <TableCell component=\"th\" scope=\"row\">{row.numeracao_unica}</TableCell>\n                                <TableCell>\n                                    <Link\n                                        style={{ textAlign: 'left' }}\n                                        color=\"inherit\"\n                                        underline=\"none\"\n                                        value={row.id}\n                                        component=\"button\"\n                                        variant=\"body2\"\n                                        onClick={consultarDetalhes}>\n                                        {row.recorte.split(' ').slice(0, 50).join(' ') + ' (...)'}\n                                    </Link>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n            {rows.length > 0 && <TablePagination\n                rowsPerPageOptions={[10, 25, 50]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                backIconButtonProps={{\n                    'aria-label': 'previous page',\n                }}\n                nextIconButtonProps={{\n                    'aria-label': 'next page',\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                labelRowsPerPage=\"Registros por página:\"\n                labelDisplayedRows={({ from, to, count }) => `${from}-${to} de ${count}`}\n            />}\n            <Dialog\n                open={openDialog}\n                onClose={handleCloseDialog}\n                scroll=\"paper\"\n                aria-labelledby=\"scroll-dialog-title\">\n                <DialogTitle id=\"scroll-dialog-title\">Detalhes do Recorte</DialogTitle>\n                <DialogContent dividers={true}>\n                    <DialogContentText>\n                        {objetoRecorte &&\n                            <Grid container spacing={3}>\n                                <Grid item md={4}>\n                                    <div className={classes.label}>Id</div>\n                                    {objetoRecorte.id}\n                                </Grid>\n                                <Grid item md={8}>\n                                    <div className={classes.label}>Número</div>\n                                    {objetoRecorte.numeracao_unica}\n                                </Grid>\n                                <Grid item md={4}>\n                                    <div className={classes.label}>Data da Criação</div>\n                                    {objetoRecorte.data_criacao_formatada}\n                                </Grid>\n                                <Grid item md={4}>\n                                    <div className={classes.label}>Data da Modificação</div>\n                                    {objetoRecorte.data_modificacao_formatada}\n                                </Grid>\n                                <Grid item md={4}>\n                                    <div className={classes.label}>Data da Publicação</div>\n                                    {objetoRecorte.data_publicacao_formatada}\n                                </Grid>\n                                <Grid item md={4}>\n                                    <div className={classes.label}>Código Diário</div>\n                                    {objetoRecorte.codigo_diario}\n                                </Grid>\n                                <Grid item md={4}>\n                                    <div className={classes.label}>Caderno</div>\n                                    {objetoRecorte.caderno}\n                                </Grid>\n                                <Grid item md={4}>\n                                    <div className={classes.label}>Novo?</div>\n                                    {objetoRecorte.novo_recorte ? 'Sim' : 'Não'}\n                                </Grid>\n                                <Grid item md={12}>\n                                    <div className={classes.label}>Recorte</div>\n                                    {objetoRecorte.recorte}\n                                </Grid>\n                            </Grid>\n                        }\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialog} color=\"primary\">\n                        Cancelar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Paper>\n    );\n}\n","\nexport const NREGISTROS_KEY = \"@recursos-nregistros\";\n\nexport const getNumeroRegistros = () => sessionStorage.getItem(NREGISTROS_KEY);\n\nexport const setNumeroRegistros = nregistros => sessionStorage.setItem(NREGISTROS_KEY, nregistros);;\n","\nimport React, { useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useDispatch } from 'react-redux';\nimport {\n    Grid, Container, Typography, Paper, IconButton,\n    CssBaseline, InputBase, CircularProgress, Fade\n} from '@material-ui/core';\n\nimport api from '../../services/api';\nimport styles from './styles';\nimport Tabela from '../../components/Tabela';\nimport { getNumeroRegistros } from '../../services/config';\n\n\nexport default function Nup() {\n\n    // Contantes auxiliares.\n    const dispatch = useDispatch()\n    const classes = styles();\n\n    const size = getNumeroRegistros();\n    const [termo, setTermo] = useState('');\n    const [rows, setRows] = useState([]);\n    const [loading, setLoading] = React.useState(false);\n\n    // Método útil para exibir a mensagem no snack.\n    const exibirMensagem = msg => {\n        dispatch({ type: 'ALTERAR_MENSAGEM', mensagem: msg });\n        dispatch({ type: 'EXIBIR_MENSAGEM' });\n    }\n\n    const pesquisar = async e => {\n        e.preventDefault();\n\n        try {\n            if (termo) {\n                setLoading(true);\n                const response = await api.get('/api/recortes/', {\n                    params: {\n                        nup: termo,\n                        size: size\n                    }\n                });\n\n                const recortes = response.data.map(r => {\n                    return {\n                        id: r.id,\n                        numeracao_unica: r.numeracao_unica,\n                        recorte: r.recorte\n                    }\n                });\n\n                if (recortes.length === 0) {\n                    exibirMensagem('Nenhum registro foi localizado.');\n                }\n\n                setRows(recortes);\n            }\n            else {\n                exibirMensagem('Digite o número do processso.');\n            }\n        } catch (err) {\n            exibirMensagem(err.message);\n        }\n        finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Container>\n            <CssBaseline />\n            <Grid md={12} item={true}>\n                <Typography variant=\"h4\" gutterBottom>\n                    Consulta por Número\n                </Typography>\n            </Grid>\n            <Grid md={12} item={true}>\n                <Paper className={classes.cxPesquisa}>\n                    <InputBase\n                        type=\"number\"\n                        className={classes.input}\n                        placeholder=\"Número único do processo\"\n                        value={termo}\n                        onChange={e => setTermo(e.target.value)} />\n                    <Fade unmountOnExit\n                        in={loading}\n                        size={25}\n                        style={{\n                            transitionDelay: loading ? '300ms' : '0ms',\n                        }}>\n                        <CircularProgress />\n                    </Fade>\n                    <IconButton className={classes.iconButton} aria-label=\"search\" onClick={pesquisar}>\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n            </Grid>\n            <Grid md={12} item={true}>\n                <Tabela rows={rows} />\n            </Grid>\n        </Container>\n    );\n}\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n    cxPesquisa: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '50%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    }\n}));\n","\nimport React, { useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Grid, Container, Typography, Paper, IconButton, CssBaseline, CircularProgress, Fade } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { format } from 'date-fns';\nimport { useDispatch } from 'react-redux';\n\nimport Tabela from '../../components/Tabela';\nimport api from '../../services/api';\nimport useStyles from './styles';\nimport { getNumeroRegistros } from '../../services/config';\n\n\nexport default function Data() {\n\n    // Contantes auxiliares.\n    const dispatch = useDispatch()\n    const classes = useStyles();\n\n    // Estados locais.\n    const size = getNumeroRegistros();\n    const [termo, setTermo] = useState(new Date());\n    const [rows, setRows] = useState([]);\n    const [loading, setLoading] = React.useState(false);\n\n    // Método útil para exibir a mensagem no snack.\n    const exibirMensagem = msg => {\n        dispatch({ type: 'ALTERAR_MENSAGEM', mensagem: msg });\n        dispatch({ type: 'EXIBIR_MENSAGEM' });\n    }\n\n    // Método que modifica a alteração do estado do termo, que\n    // não se encaixa no padrão no caso do widget de calendário.\n    const handleTermo = date => {\n        setTermo(date);\n    }\n\n    // Métodos que faz a consulta remote dos recortes.\n    const pesquisar = async e => {\n        e.preventDefault();\n\n        try {\n            if (termo) {\n\n                setLoading(true);\n                const response = await api.get('/api/recortes/', {\n                    params: {\n                        t: format(termo, 'ddMMyyyy'),\n                        size: size\n                    }\n                });\n\n                const recortes = response.data.map(r => {\n                    return {\n                        id: r.id,\n                        numeracao_unica: r.numeracao_unica,\n                        recorte: r.recorte\n                    }\n                });\n\n                if (recortes.length === 0) {\n                    exibirMensagem('Nenhum registro foi localizado.');\n                }\n\n                setRows(recortes);\n            }\n            else {\n                exibirMensagem('Digite ou selecione a data de publicação do processo.');\n            }\n        } catch (err) {\n            exibirMensagem(err.message);\n        }\n        finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Container>\n            <CssBaseline />\n            <Grid md={12} item={true}>\n                <Typography variant=\"h4\" gutterBottom>\n                    Consulta por Data\n                </Typography>\n            </Grid>\n            <Grid md={12} item={true}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Paper className={classes.cxPesquisa}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"date-picker-dialog\"\n                            label=\"Data de publicação\"\n                            format=\"dd/MM/yyyy\"\n                            value={termo}\n                            className={classes.input}\n                            onChange={handleTermo}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <Fade unmountOnExit\n                            in={loading}\n                            size={25}\n                            style={{\n                                transitionDelay: loading ? '300ms' : '0ms',\n                            }}>\n                            <CircularProgress />\n                        </Fade>\n                        <IconButton className={classes.iconButton} aria-label=\"search\" onClick={pesquisar}>\n                            <SearchIcon />\n                        </IconButton>\n                    </Paper>\n                </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid md={12} item={true}>\n                <Tabela rows={rows} />\n            </Grid>\n        </Container>\n    );\n}\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n    // Estilos da caixa de pesquisa.\n    cxPesquisa: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '50%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    }\n}));\n","\nimport React, { useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useDispatch } from 'react-redux';\nimport {\n    Grid, Container, Typography, Paper, IconButton,\n    CssBaseline, InputBase, CircularProgress, Fade\n} from '@material-ui/core';\n\nimport api from '../../services/api';\nimport styles from './styles';\nimport Tabela from '../../components/Tabela';\nimport { getNumeroRegistros } from '../../services/config';\n\n\nexport default function Termo() {\n\n    // Contantes auxiliares.\n    const dispatch = useDispatch()\n    const classes = styles();\n\n    const size = getNumeroRegistros();\n    const [termo, setTermo] = useState('');\n    const [rows, setRows] = useState([]);\n    const [loading, setLoading] = React.useState(false);\n\n    const termoAjustado = () => {\n        return termo.split(' ').join('-');\n    }\n\n    // Método útil para exibir a mensagem no snack.\n    const exibirMensagem = msg => {\n        dispatch({ type: 'ALTERAR_MENSAGEM', mensagem: msg });\n        dispatch({ type: 'EXIBIR_MENSAGEM' });\n    }\n\n    const pesquisar = async e => {\n        e.preventDefault();\n\n        try {\n            if (termo) {\n\n                setLoading(true);\n                const response = await api.get('/api/recortes/', {\n                    params: {\n                        q: termoAjustado(),\n                        size: size\n                    }\n                });\n\n                const recortes = response.data.map(r => {\n                    return {\n                        id: r.id,\n                        numeracao_unica: r.numeracao_unica,\n                        recorte: r.recorte\n                    }\n                });\n\n                if (recortes.length === 0) {\n                    exibirMensagem('Nenhum registro foi localizado.');\n                }\n\n                setRows(recortes);\n            }\n            else {\n                exibirMensagem('Digite ao menos um termo para pesquisar.');\n            }\n        } catch (err) {\n            exibirMensagem(err.message);\n        }\n        finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Container>\n            <CssBaseline />\n            <Grid md={12} item={true}>\n                <Typography variant=\"h4\" gutterBottom>\n                    Consulta por Termos\n                </Typography>\n            </Grid>\n            <Grid md={12} item={true}>\n                <Paper className={classes.cxPesquisa}>\n                    <InputBase\n                        className={classes.input}\n                        placeholder=\"Termos separados por espaços\"\n                        value={termo}\n                        onChange={e => setTermo(e.target.value)} />\n                    <Fade unmountOnExit\n                        in={loading}\n                        size={25}\n                        style={{\n                            transitionDelay: loading ? '300ms' : '0ms',\n                        }}>\n                        <CircularProgress />\n                    </Fade>\n                    <IconButton className={classes.iconButton} aria-label=\"search\" onClick={pesquisar}>\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n            </Grid>\n            <Grid md={12} item={true}>\n                <Tabela rows={rows} />\n            </Grid>\n        </Container>\n    );\n}\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default makeStyles(theme => ({\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n}));\n","\nimport React, { useState } from 'react';\nimport { Grid, Container, Typography, CssBaseline, TextField } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport { getNumeroRegistros, setNumeroRegistros } from '../../services/config';\n\n\nexport default function Config() {\n\n    // Contantes auxiliares.\n    const [size, setSize] = useState(getNumeroRegistros());\n    const classes = useStyles();\n\n    // Altera o número máximo de registros retornados nas pesquisas.\n    const handleNRegistros = e => {\n        const nregistros = parseInt(e.target.value);\n        setNumeroRegistros(nregistros);\n        setSize(nregistros);\n    }\n\n    return (\n        <Container>\n            <CssBaseline />\n            <Grid>\n                <Typography variant=\"h4\" gutterBottom>\n                    Configurações\n                </Typography>\n            </Grid>\n            <Grid>\n                <TextField\n                    required\n                    type=\"number\"\n                    id=\"standard-required\"\n                    label=\"Número máximo de registros\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleNRegistros}\n                    value={size}\n                />\n            </Grid>\n        </Container>\n    );\n}\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 240;\n\nexport default makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    logo: {\n        width: '100px',\n        position: 'absolute',\n        left: '16px',\n        top: '16px'\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n        backgroundColor: '#3e50b4'\n    },\n    toolbarIcon: {\n        backgroundColor: '#eeeeee',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        borderBottomColor: 'none',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menu: {\n        backgroundColor: '#eeeeee'\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        backgroundColor: '#eeeeee',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        backgroundColor: '#eeeeee',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n\n    // Estilo do menu speed dial.\n    speedDial: {\n        position: 'absolute',\n        '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n            top: theme.spacing(2),\n            right: theme.spacing(2),\n        },\n    },\n}));\n","\nimport React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TodayIcon from '@material-ui/icons/Today';\nimport Looks4Icon from '@material-ui/icons/Looks4';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SpellcheckIcon from '@material-ui/icons/Spellcheck';\n\nimport { Link } from \"react-router-dom\";\n\n\nexport const mainListItems = (\n    <div>\n        <Link to=\"/nup\" style={{ textDecoration: 'none' }}>\n            <ListItem button>\n                <ListItemIcon>\n                    <Looks4Icon />\n                </ListItemIcon>\n                <ListItemText primary=\"Número\" />\n            </ListItem>\n        </Link>\n        <Link to=\"/data\" style={{ textDecoration: 'none' }}>\n            <ListItem button>\n                <ListItemIcon>\n                    <TodayIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Data de Criação\" />\n            </ListItem>\n        </Link>\n        <Link to=\"/termos\" style={{ textDecoration: 'none' }}>\n            <ListItem button>\n                <ListItemIcon>\n                    <SpellcheckIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Termos\" />\n            </ListItem>\n        </Link>\n        <Link to=\"/config\" style={{ textDecoration: 'none' }}>\n            <ListItem button>\n                <ListItemIcon>\n                    <SettingsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Configurações\" />\n            </ListItem>\n        </Link>\n    </div>\n);\n","\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport {\n    Snackbar, CssBaseline, Drawer, AppBar, Toolbar, List,\n    Typography, IconButton, Container, Grid\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Route } from \"react-router-dom\";\n\nimport Nup from '../Nup';\nimport Data from '../Data';\nimport Termo from '../Termo';\nimport Config from '../Config';\nimport useStyles from './styles';\nimport { mainListItems } from './listItems';\nimport { logout } from '../../services/auth';\nimport { getNumeroRegistros, setNumeroRegistros } from '../../services/config';\n\n\nconst actions = [\n    { icon: <ExitToAppIcon />, name: 'Logout' },\n];\n\nexport default function Layout() {\n\n    // Inicia o número de registros, caso necessário.\n    const nregistros = getNumeroRegistros();\n    if (!nregistros) {\n        setNumeroRegistros(100);\n    }\n\n    // Contantes auxiliares.\n    const classes = useStyles();\n    const isMobile = window.innerWidth <= 800;\n\n    // Estados locais.\n    const [open, setOpen] = useState(!isMobile);\n    const [dialOpen, setDialOpen] = React.useState(false);\n\n    // Estados gerenciados pelo redux.\n    const snackOpen = useSelector(state => state.exibicao);\n    const mensagem = useSelector(state => state.mensagem);\n    const dispatch = useDispatch()\n\n    // Métodos que controlam a exibição do menu lateral.\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    // Métodos que controlam a exibição do botão de logout.\n    const handleDialOpen = () => {\n        setDialOpen(true);\n    };\n\n    const handleDialClose = () => {\n        setDialOpen(false);\n    };\n\n    // Método que oculta o snack.\n    const handleSnackClose = e => {\n        dispatch({ type: 'OCULTAR_MENSAGEM' });\n    };\n\n    // Handle do logout.\n    const handleLogout = () => {\n        logout();\n        window.location.reload();\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Pesquisa de Recortes\n                    </Typography>\n\n                    <div className={classes.exampleWrapper}>\n                        <SpeedDial\n                            ariaLabel=\"SpeedDial example\"\n                            className={classes.speedDial}\n                            hidden={false}\n                            icon={<PersonIcon />}\n                            onClose={handleDialClose}\n                            onOpen={handleDialOpen}\n                            open={dialOpen}\n                            direction=\"down\">\n                            {actions.map(action => (\n                                <SpeedDialAction\n                                    key={action.name}\n                                    icon={action.icon}\n                                    tooltipTitle={action.name}\n                                    onClick={handleLogout} />\n                            ))}\n                        </SpeedDial>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Drawer variant=\"permanent\" open={open}\n                classes={{\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                }}>\n                <img src={process.env.PUBLIC_URL + '/tikal.png'} alt=\"Tikal Tech\" className={classes.logo} />\n                <div className={classes.toolbarIcon}>\n\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n\n                <List className={classes.menu}>\n                    {mainListItems}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        <Route path=\"/nup\" component={Nup} />\n                        <Route path=\"/data\" component={Data} />\n                        <Route path=\"/termos\" component={Termo} />\n                        <Route path=\"/config\" component={Config} />\n                    </Grid>\n                </Container>\n            </main>\n            <Snackbar\n                open={snackOpen}\n                autoHideDuration={4000}\n                onClose={handleSnackClose}\n                message={mensagem}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={handleSnackClose}>\n                        <CloseIcon />\n                    </IconButton>,\n                ]}\n            />\n        </div>\n    );\n}\n","\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./services/auth\";\nimport Login from './pages/Login/';\nimport Layout from './pages/Layout/';\n\n\n// Grampeia o método render do Route para adicionar a verificação de estar logado ou não.\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => isAuthenticated() ?\n            (<Component {...props} />) :\n            (<Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />)\n        }\n    />\n);\n\nconst Routes = () => (\n    <BrowserRouter>\n        <Switch>\n            <PrivateRoute exact path=\"/\" component={Layout} />\n            <PrivateRoute path=\"/(nup|data|termos|config)\" component={Layout} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"*\" component={() => <h1>Page not found</h1>} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Routes;\n","\nimport React from \"react\";\nimport Routes from \"./routes\";\n\nconst App = () => <Routes />;\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport { mensagemReducer, exibicaoMensagemReducer } from './reducers';\n\n\nconst recorteStore = createStore(combineReducers({\n    mensagem: mensagemReducer,\n    exibicao: exibicaoMensagemReducer\n}))\n\nReactDOM.render(\n    <Provider store={recorteStore}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","\nexport function mensagemReducer(state = '', action) {\n    let mensagem = action.mensagem || state;\n    switch (action.type) {\n        case 'ALTERAR_MENSAGEM':\n            return mensagem;\n        default:\n            return state;\n    }\n}\n\nexport function exibicaoMensagemReducer(state = false, action) {\n    switch (action.type) {\n        case 'EXIBIR_MENSAGEM':\n            return true;\n        case 'OCULTAR_MENSAGEM':\n            return false;\n        default:\n            return state;\n    }\n}\n"],"sourceRoot":""}